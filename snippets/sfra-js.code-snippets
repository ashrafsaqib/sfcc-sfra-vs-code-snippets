{

	"log": {
		"scope": "javascript,typescript",
		"prefix": "sfra-log",
		"body": [
			"var Logger = require('dw/system/Logger');\nLogger.getLogger('custom', 'custom').error('$1' + JSON.stringify($2));",
			"$3"
		],
		"description": "Custom Logging"
	},
	"sfra-siteprefencejs": {
		"scope": "javascript,typescript",
		"prefix": "sfra-sitepreference",
		"body": [
			"var Site = require('dw/system/Site');\nvar $1 = Site.current.getCustomPreferenceValue('$2');",
			"$3"
		],
		"description": "site preferences js value"
	}
	,
	"siteurl": {
		"scope": "javascript,typescript",
		"prefix": "sfra-url",
		"body": [
			"URLUtils.url('Page-Show', 'cid', 'privacy-policy')"
		],
		"description": "internal link"
	}
	
	,
	"resourcetext": {
		"scope": "javascript,typescript",
		"prefix": "sfra-resourcetext",
		"body": [
			"Resource.msg('description.privacypolicy.registration.loyalityoptin', 'registration', null)"
		],
		"description": "Resrouce text"
	},
	"customObjects": {
		"scope": "javascript,typescript",
		"prefix": "sfra-customobjects",
		"body": [
			"var CustomObjMgr = require('dw/object/CustomObjectMgr');",
			"var queryMap = require('dw/util/HashMap')(); ",
			"queryMap.put('custom.status', 'COMPLETED');",
			"var customObjIterator = CustomObjMgr.queryCustomObjects('PaymentProcessing', queryMap, null);",
			"while (customObjIterator.hasNext()) {",
			"    var payProcessingObj = customObjIterator.next();",
			"}"
		],
		"description": "Custom Objects"
	},
	"transaction": {
		"scope": "javascript,typescript",
		"prefix": "sfra-transaction",
		"body": [
			"var Transaction = require('dw/system/Transaction');",
			"Transaction.wrap(function () {",
			"});"
		],
		"description": "Transaction"
	}
	,
	"controllerFunction": {
		"scope": "javascript,typescript",
		"prefix": "sfra-controller-function",
		"body": [
			"server.post('Any-Endpoint', function (\n  req,\n  res,\n  next\n) {\n \n  res.render('template/any', { pageData: pageData });\n  res.json({\n    success: true,\n  });\n\n  next();\n});"
		],
		"description": "Controller Function"
	}
	,
	"controllerOverride": {
		"scope": "javascript,typescript",
		"prefix": "sfra-controller-override",
		"body": [
			"'use strict';\n\nvar server = require('server');\nserver.extend(module.superModule);\n\nmodule.exports = server.exports();"
		],
		"description": "Controller Override"
	},
	"sessionData": {
		"scope": "javascript,typescript",
		"prefix": "sfra-session-data",
		"body": [
			"//session is global object",
			"//using privacy cache",
			"session.privacyCache.get('name')",
			"session.privacyCache.set('name', value);",
			"// custom properties on session object",
			"session.custom.anyProp = anyValue;",
			"// access current customer logged",
			"session.customer.profile",
			"//access currency",
			"session.currency.currencyCode",
			"// you can access or modify privacy object if its initiated ",
			"session.privacy.anyProp",
			"// check if user is logged in ",
			"session.userAuthenticated"
		],
		"description": "Session in SFRA"
	},
	"currentCustomer": {
		"scope": "javascript,typescript",
		"prefix": "sfra-customer",
		"body": [
			"// you can use session global variable ",
			"session.customer.profile",
			"//you can use request variable inside controller",
			"req.currentCustomer.profile",
			"// raw is actually instance of Class Customer ",
			"req.currentCustomer.raw.profile"
		],
		"description": "Current Customer"
	}
	,
	"currentSite": {
		"scope": "javascript,typescript",
		"prefix": "sfra-site",
		"body": [
			"var Site = require('dw/system/Site');\nSite.getCurrent().getID();"
		],
		"description": "Current Site"
	},
	"currentLocale": {
		"scope": "javascript,typescript",
		"prefix": "sfra-locale-country",
		"body": [
			"var Locale = require('dw/util/Locale');\nvar currentLocale = Locale.getLocale(req.locale.id);\ncurrentLocale.country"
		],
		"description": "Current Locale and locale country"
	},
	"currentInstance": {
		"scope": "javascript,typescript",
		"prefix": "sfra-instance",
		"body": [
			"var System = require('dw/system/System');\nSystem.getInstanceType() !== System.PRODUCTION_SYSTEM"
		],
		"description": "Get Instance Type"
	},
	"customCache": {
		"scope": "javascript,typescript",
		"prefix": "sfra-cache-custom",
		"body": [
			"var CacheMgr = require('dw/system/CacheMgr');\nCacheMgr.getCache('anyCache');\nvar cacheKey = pxCache.get('anykey');\npxCache.put('anykey, 'anyvalue');\n"
		],
		"description": "Get Custom Cache"
	}
	
	

}