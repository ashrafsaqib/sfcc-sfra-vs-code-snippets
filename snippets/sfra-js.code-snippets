{

	"log": {
		"scope": "javascript,typescript",
		"prefix": "sfra-log",
		"body": [
			"dw.system.Logger.getLogger('custom', 'custom').error('$1' + JSON.stringify($2));",
			"$3"
		],
		"description": "Custom Logging"
	},
	"sfra-siteprefencejs": {
		"scope": "javascript,typescript",
		"prefix": "sfra-siteprefencejs",
		"body": [
			"var Site = require('dw/system/Site');\nvar $1 = Site.current.getCustomPreferenceValue('$2');",
			"$3"
		],
		"description": "site preferences js value"
	}
	,
	"siteurl": {
		"scope": "javascript,typescript",
		"prefix": "sfra-url",
		"body": [
			"URLUtils.url('Page-Show', 'cid', 'privacy-policy')"
		],
		"description": "internal link"
	}
	
	,
	"resourcetext": {
		"scope": "javascript,typescript",
		"prefix": "sfra-resourcetext",
		"body": [
			"Resource.msg('description.privacypolicy.registration.loyalityoptin', 'registration', null)"
		],
		"description": "Resrouce text"
	},
	"customObjects": {
		"scope": "javascript,typescript",
		"prefix": "sfra-customobjects",
		"body": [
			"var CustomObjMgr = require('dw/object/CustomObjectMgr');\nvar queryMap = require('dw/util/HashMap')();\nqueryMap.put('custom.status', 'COMPLETED');\nvar ObjItr = CustomObjMgr.queryCustomObjects('PaymentProcessing', queryMap, null); \nwhile (ObjItr.hasNext()) {\n  var Obj = ObjItr.next();\n}"
		],
		"description": "Custom Objects"
	},
	"transaction": {
		"scope": "javascript,typescript",
		"prefix": "sfra-transaction",
		"body": [
			"var Transaction = require('dw/system/Transaction');",
			"Transaction.wrap(function () {",
			"});"
		],
		"description": "Transaction"
	}
	,
	"controllerFunction": {
		"scope": "javascript,typescript",
		"prefix": "sfra-controller-function",
		"body": [
			"server.post('Any-Endpoint', function (\n  req,\n  res,\n  next\n) {\n \n  res.render('template/any', { pageData: pageData });\n  res.json({\n    success: true,\n  });\n\n  next();\n});"
		],
		"description": "Controller Function"
	}
	,
	"controllerOverride": {
		"scope": "javascript,typescript",
		"prefix": "sfra-controller-override",
		"body": [
			"'use strict';\n\nvar server = require('server');\nserver.extend(module.superModule);\n\nmodule.exports = server.exports();"
		],
		"description": "Controller Override"
	},
	"sessionData": {
		"scope": "javascript,typescript",
		"prefix": "sfra-session-data",
		"body": [
			"req.session.privacyCache.get('name')\nreq.session.privacyCache.set('name', value);"
		],
		"description": "Session set / get"
	},
	"currentCustomer": {
		"scope": "javascript,typescript",
		"prefix": "sfra-customer",
		"body": [
			"req.currentCustomer.raw"
		],
		"description": "Current Customer"
	}
	

}